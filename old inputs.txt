/// angle to the apple
            // x and y if it went in the direction of the previous move
            int new_x = s.x;
            int new_y = s.y;
            switch(s.direction){
                case 1: new_y -= s.height; break;
                case 2: new_x += s.height; break;
                case 4: new_x-= s.height; break;
            }
            // for first move
            if (s.direction == 0){
                new_y -= s.height;
            }

// vectors
            vector<int> current = {7,8};
            vector<int> apple_loc = {10,5};

            //calculations
            float mag_cur = sqrt(pow(current[0],2) + pow(current[1],2) );
            float mag_apple = sqrt(pow(apple_loc[0],2) + pow(apple_loc[1],2) );

            float top_val = current[0] * current[1] + apple_loc[0] * apple_loc[1];

            // getting cos angle
            float cosAng = top_val / (mag_cur*mag_apple);


            // using cosine
            float result = acos(cosAng);

            // convert to degree
            float deg = result * 180/M_PI;

angle thing i thought of

/// 360 angle / rad from snake to apple
            float delta_x = s.x - apples[0].x ;
            float delta_y = apples[0].y - s.y ;

            float theta_radians = atan2(delta_y, delta_x);

            // convert to degree
            float deg = theta_radians * 180/M_PI;